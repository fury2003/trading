// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// trungnguyen

//@version=4
study("Stock - ADX MACD SAR")

useCurrentRes = input(false, title="Use Current Chart Resolution?", group="Timeframe Setting")
resCustom     = input("3D",  "► Time frame", type = input.resolution, group="Timeframe Setting")
res = useCurrentRes ? timeframe.period : resCustom
showLast      = input(title="Show last", type=input.integer, defval=500, group="Common setting")

// MACD
fast_length   = input(title="Fast Length", type=input.integer, defval=12, group="MACD Setting")
slow_length   = input(title="Slow Length", type=input.integer, defval=26, group="MACD Setting")
src           = input(title="Source", type=input.source, defval=close, group="MACD Setting")
signal_length = input(title="Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 9, group="MACD Setting")
sma_source    = input(title="Oscillator MA Type", type=input.string, defval="EMA", options=["SMA", "EMA"], group="MACD Setting")
sma_signal    = input(title="Signal Line MA Type", type=input.string, defval="SMA", options=["SMA", "EMA"], group="MACD Setting")

// ADX DI
length        = input(title="Length", type=input.integer, defval=17, group="ADX Setting")
threshold     = input(title="Threshold", type=input.integer, defval=25, group="ADX Setting")

// ATR
Periods       = input(title="ATR Period", type=input.integer, defval=10, group="ATR Setting")
srcATR        = input(hl2, title="Source", group="ATR Setting")
Multiplier    = input(title="ATR Multiplier", type=input.float, step=0.1, defval=3.0)
showsignals   = input(title="Show Buy/Sell Signals ?", type=input.bool, defval=true)

//Calculating Parabolic SAR
f_PSAR(_res) =>
    start = input(0.02, group="Parabolic SAR Setting")
    increment = input(0.02, group="Parabolic SAR Setting")
    maximum = input(0.2, "Max Value", group="Parabolic SAR Setting")
    _sarUp = security(syminfo.tickerid, _res, sar(start, increment, maximum))
    _sarDown = security(syminfo.tickerid, _res, sar(start, increment, maximum))
    [_sarUp, _sarDown]

[sarUp, sarDown] = f_PSAR(res)

colUp = close >= sarDown ? color.lime : na
colDown = close <= sarUp ? color.red : na
showUp = close >= sarDown ? 1 : 0
showDown = close <= sarUp ? 1 : 0

// Calculating ADX DMI
TrueRange = max(max(high-low, abs(high-nz(close[1]))), abs(low-nz(close[1])))
DirectionalMovementPlus = high-nz(high[1]) > nz(low[1])-low ? max(high-nz(high[1]), 0): 0
DirectionalMovementMinus = nz(low[1])-low > high-nz(high[1]) ? max(nz(low[1])-low, 0): 0

SmoothedTrueRange = 0.0
SmoothedTrueRange := nz(SmoothedTrueRange[1]) - (nz(SmoothedTrueRange[1])/length) + TrueRange

SmoothedDirectionalMovementPlus = 0.0
SmoothedDirectionalMovementPlus := nz(SmoothedDirectionalMovementPlus[1]) - (nz(SmoothedDirectionalMovementPlus[1])/length) + DirectionalMovementPlus

SmoothedDirectionalMovementMinus = 0.0
SmoothedDirectionalMovementMinus := nz(SmoothedDirectionalMovementMinus[1]) - (nz(SmoothedDirectionalMovementMinus[1])/length) + DirectionalMovementMinus

DIPlus = SmoothedDirectionalMovementPlus / SmoothedTrueRange * 100
DIMinus = SmoothedDirectionalMovementMinus / SmoothedTrueRange * 100
DX = abs(DIPlus-DIMinus) / (DIPlus+DIMinus)*100
ADX = sma(DX, length)

// Calculating MACD
f_timeFrameResolutionInMinutes(_res, val) =>
    security(syminfo.tickerid, _res, val)

fast_ma = sma_source == "SMA" ? sma(src, fast_length) : ema(src, fast_length)
slow_ma = sma_source == "SMA" ? sma(src, slow_length) : ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? sma(macd, signal_length) : ema(macd, signal_length)

outMacD = f_timeFrameResolutionInMinutes(res, macd)
outSignal = f_timeFrameResolutionInMinutes(res, signal)
macd_IsAbove = outMacD >= outSignal
macd_color = macd_IsAbove ? color.green : color.red
circleYPosition = outSignal
isMACD = cross(outMacD, outSignal)

// Calculating ATR
atr= atr(Periods)
up=src-(Multiplier*atr)
up1 = nz(up[1],up)
up := close[1] > up1 ? max(up,up1) : up
dn=src+(Multiplier*atr)
dn1 = nz(dn[1], dn)
dn := close[1] < dn1 ? min(dn, dn1) : dn
trend = 1
trend := nz(trend[1], trend)
trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend
// upPlot = plot(trend == 1 ? up : na, title="Up Trend", style=plot.style_linebr, linewidth=2, color=color.green)
buySignal = trend == 1 and trend[1] == -1
// dnPlot = plot(trend == 1 ? na : dn, title="Down Trend", style=plot.style_linebr, linewidth=2, color=color.red)
sellSignal = trend == -1 and trend[1] == 1

// show DMI
over = crossover(DIPlus,DIMinus) 
under = crossunder(DIPlus,DIMinus) 
bgcolor(over?color.green:na, title="DI+ Crossover Background", show_last=showLast)
bgcolor(under?color.red:na, title="DI- Crossunder Background", show_last=showLast)

// doubleUp = crossover(ADX,threshold) and crossover(DIPlus,DIMinus) 
// doubleDown = crossover(ADX,threshold) and crossunder(DIPlus,DIMinus) 
// plot(doubleUp ? threshold : na, style=plot.style_cross, color=color.lime, linewidth=3, show_last=showLast)
// plot(doubleDown ? threshold : na, style=plot.style_cross, color=color.maroon, linewidth=3, show_last=showLast)

plot(DIPlus, color=color.green, title="DI+")
plot(DIMinus, color=color.red, title="DI-")
plot(ADX, color=color.navy, title="ADX")
hline(threshold, color=color.black)
hline(50, color=color.blue)

// show MACD
plotshape(isMACD ? threshold : na, title="MACD Cross", text="M", location=location.absolute, style=shape.labeldown, size=size.tiny, color=macd_color, textcolor=color.white, transp=0, offset=-1, show_last=showLast)
// plot(cross(outMacD, outSignal) ? threshold : na, title="MACD Cross Signal", style=plot.style_cross, linewidth=4, color=macd_color, show_last=showLast)

// show SAR
// plot(sarUp and showUp>showUp[1]? 50 : na, title="Up Trending SAR", style=plot.style_circles, linewidth=4,color=colUp, show_last=showLast)
// plot(sarDown and showDown>showDown[1] ? 50 : na, title="Up Trending SAR", style=plot.style_circles, linewidth=4,color=colDown, show_last=showLast)
plotshape(sarUp and showUp>showUp[1] ? 50 : na, title="SAR Buy", text="S", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.green, textcolor=color.white, transp=0, show_last=showLast)
plotshape(sarDown and showDown>showDown[1] ? 50 : na, title="SAR Sell", text="S", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.red, textcolor=color.white, transp=0, show_last=showLast)


// show ATR
plotshape(buySignal ? 50 : na, title="ATR Buy", text="A", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.green, textcolor=color.white, transp=0, show_last=showLast)
plotshape(sellSignal ? 50 : na, title="ATR Sell", text="A", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.red, textcolor=color.white, transp=0, show_last=showLast)
